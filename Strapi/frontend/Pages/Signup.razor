@page "/signup"

@inject HttpClient Http
@using Microsoft.Extensions.Configuration;
@inject IConfiguration Configuration

@using Microsoft.AspNetCore.Components.Forms;
@using Models;

@using Microsoft.Extensions.Logging
@inject ILogger<Signup> Logger

<PageTitle>Sign Up</PageTitle>

<main class="flex-column m-auto justify-center">
    @if (!SignupSuccess)
    {
        <h1 class="mx-auto text-center mb-4 text-2xl">Sign Up</h1>

        <EditForm Model="@signupModel" OnValidSubmit="@HandleValidSubmit" class="w-full max-w-sm mx-auto">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="md:flex md:items-center mb-6">
                <div class="md:w-1/3">
                    <label class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4" for="username">
                        Username
                    </label>
                </div>
                <div class="md:w-2/3">
                    <InputText id="username" @bind-Value="signupModel.Username" class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500" type="text" placeholder="Jane Doe" />
                </div>
            </div>
            <div class="md:flex md:items-center mb-6">
                <div class="md:w-1/3">
                    <label class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4" for="email">
                        Email
                    </label>
                </div>
                <div class="md:w-2/3">
                    <InputText id="email" @bind-Value="signupModel.Email" class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500" type="email" placeholder="janedoe@email.com" />
                </div>
            </div>
            <div class="md:flex md:items-center mb-6">
                <div class="md:w-1/3">
                    <label class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4" for="password">
                        Password
                    </label>
                </div>
                <div class="md:w-2/3">
                    <InputText id="password" @bind-Value="signupModel.Password" class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500" type="password" placeholder="******************" />
                </div>
            </div>
            <div class="md:flex md:items-center mb-6">
                <div class="md:w-1/3"></div>
                <label class="md:w-2/3 block text-gray-500 font-bold">
                    <input class="mr-2 leading-tight" type="checkbox">
                    <span class="text-sm">
                        Send me your newsletter!
                    </span>
                </label>
            </div>
            <div class="md:flex md:items-center">
                <div class="md:w-1/3"></div>
                <div class="md:w-2/3">
                    <button class="shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded" type="submit">
                        Sign Up
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <h1 class="mx-auto text-center mb-4 text-2xl">Sign Up Successful!</h1>
        <NavLink href="/login">Click here to log in</NavLink>
    }

</main>


@code {
    private SignupModel signupModel = new();

    private bool SignupSuccess = false;

    private async Task HandleValidSubmit()
    {
        strapi_api_url = Configuration["AppSettings:STRAPI_API_URL"];
        var url = "{STRAPI_API_URL}/api/users";

        Logger.LogInformation("HandleValidSubmit called");
        Console.WriteLine(signupModel.Username);
        // Process the valid form


        var response = await Http.PostAsJsonAsync<SignupModel>(url.Replace("{STRAPI_API_URL}", strapi_api_url), signupModel);

        if (response.IsSuccessStatusCode)
        {
            SignupSuccess = true;
        }
    }

    public string strapi_api_url;

}
